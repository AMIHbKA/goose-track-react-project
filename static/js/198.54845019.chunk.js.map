{"version":3,"file":"static/js/198.54845019.chunk.js","mappings":"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","sources":["components/StatisticsPage/StatisticsPageStyled.jsx","components/StatisticsPage/BarWithGradient/BarWithGradient.jsx","utilities/uniqueNumberGenerator.js","components/StatisticsPage/StatisticsChart/StatisticsChartStyled.jsx","components/StatisticsPage/StatisticsChart/StatisticsChart.jsx","utilities/tasksStatisticCalculator.js","pages/StatisticsPage.jsx","redux/tasks/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StatisticsPageWrapper = styled.div`\n  height: 100%;\n\n  padding-bottom: 20px;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.laptop}) {\n    padding-bottom: 14px;\n  }\n`;\n\nexport const StatisticsPageContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n\n  height: 100%;\n\n  padding: 28px 14px 14px;\n\n  margin-bottom: 20px;\n\n  border-radius: 16px;\n\n  background-color: ${({ theme }) => theme.statistics.backgroundColor};\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    padding: 132px 32px 32px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.laptop}) {\n    padding: 134px 113px 32px;\n  }\n`;\n\nexport const StatisticsPageHead = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 40px;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    flex-direction: row;\n    justify-content: space-between;\n\n    padding: 0 32px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.laptop}) {\n    padding: 0 40px;\n  }\n`;\n\nexport const StatisticsPageLegend = styled.ul`\n  display: flex;\n\n  margin-top: 2px;\n\n  font-weight: 400;\n  line-height: 18px;\n\n  li {\n    display: flex;\n    align-items: center;\n\n    ::before {\n      content: '';\n\n      display: inline-block;\n\n      width: 8px;\n      height: 8px;\n\n      margin-right: 8px;\n\n      border-radius: 50%;\n\n      background-color: ${({ theme }) => theme.colors.highPriorityBack};\n    }\n\n    :nth-child(2) {\n      margin-left: 14px;\n\n      ::before {\n        background-color: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`;\n","import uniqueNumberGenerator from '../../../utilities/uniqueNumberGenerator';\n\nconst getPath = (x, y, width, height, radius) => {\n  return `M ${x},${y} \n           L ${x},${y + height - radius}\n           C ${x} ${y + height} ${x} ${y + height} ${x + radius} ${y + height}\n           L ${x + width - radius}, ${y + height}\n           C ${x + width} ${y + height} ${x + width} ${y + height} ${\n    x + width\n  } ${y + height - radius}\n           L ${x + width},${y} \n           Z`;\n};\n\nconst BarWithGradient = props => {\n  const { fill, x, y, width, height, radius } = props;\n\n  const id = uniqueNumberGenerator();\n\n  return (\n    <>\n      <defs>\n        <linearGradient id={id} x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\">\n          <stop offset=\"0%\" style={{ stopColor: fill, stopOpacity: 1 }} />\n          <stop offset=\"100%\" style={{ stopColor: fill, stopOpacity: 0 }} />\n        </linearGradient>\n      </defs>\n      <path\n        d={getPath(x, y, width, height, radius)}\n        stroke=\"none\"\n        fill={`url(#${id})`}\n      />\n    </>\n  );\n};\n\nexport default BarWithGradient;\n","export default function uniqueNumberGenerator() {\n  const array = new Uint32Array(1);\n\n  window.crypto.getRandomValues(array);\n\n  return array[0];\n}\n","import styled from 'styled-components';\n\nexport const StatisticsChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  flex-grow: 1;\n\n  max-height: 413px;\n\n  padding: 40px 14px;\n\n  border-width: ${({ theme }) => theme.statistics.linesWidth};\n  border-color: ${({ theme }) => theme.statistics.linesColor};\n  border-style: solid;\n  border-radius: 20px;\n\n  h2 {\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 21px;\n\n    margin-bottom: 20px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    max-height: 424px;\n\n    padding: 32px;\n\n    h2 {\n      margin-bottom: 24px;\n    }\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.laptop}) {\n    max-height: 440px;\n\n    padding: 40px;\n  }\n`;\n\nexport const StatisticsChartWrapperExternal = styled.div`\n  position: relative;\n\n  flex-grow: 1;\n`;\n\nexport const StatisticsChartWrapperInternal = styled.div`\n  position: absolute;\n\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n`;\n\nexport const StatisticsChartWarningMessage = styled.div`\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 12px;\n\n  color: ${({ theme }) => theme.statistics.warningMessageColor};\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: 18px;\n  }\n`;\n","import {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts';\nimport { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { useWindowSize, useRect } from 'hooks';\nimport BarWithGradient from '../BarWithGradient/BarWithGradient';\nimport {\n  StatisticsChartContainer,\n  StatisticsChartWarningMessage,\n  StatisticsChartWrapperExternal,\n  StatisticsChartWrapperInternal,\n} from './StatisticsChartStyled';\nimport { useSelector } from 'react-redux';\nimport { getTasks } from 'redux/tasks/selectors';\nimport { tasksStatisticCalculator } from 'utilities/tasksStatisticCalculator';\n// import { useTranslation } from 'react-i18next';\n// import { useSelector } from 'react-redux';\n// import { getTasks } from 'redux/tasks/selectors';\n\n// const data = [\n//   {\n//     name: 'To do',\n//     day: 30,\n//     month: 35,\n//   },\n//   {\n//     name: 'In Progress',\n//     day: 20,\n//     month: 30,\n//   },\n//   {\n//     name: 'Done',\n//     day: 45,\n//     month: 40,\n//   },\n// ];\n\nconst StatisticsChart = () => {\n  const windowSize = useWindowSize();\n\n  const [chartSizes, chartWrapperRef] = useRect('resize', 100, 100);\n\n  const theme = useContext(ThemeContext);\n\n  const tasks = useSelector(getTasks);\n\n  const resultArray = tasksStatisticCalculator(tasks);\n\n  const axisTextStyles = {\n    fill: theme.statistics.chartTextColor,\n    fontSize: '14',\n    fontWeight: '400',\n  };\n\n  const barLabelStyles = {\n    fill: theme.statistics.chartTextColor,\n    fontSize: windowSize.width < 768 ? 12 : 16,\n    fontWeight: '500',\n  };\n\n  const barWidth = windowSize.width < 768 ? 22 : 27;\n\n  return (\n    <StatisticsChartContainer>\n      <h2>Tasks</h2>\n      <StatisticsChartWrapperExternal ref={chartWrapperRef}>\n        {chartSizes.height < 100 ? (\n          <StatisticsChartWarningMessage>\n            {chartSizes.height > 21 &&\n              `Insufficient window height for chart display`}\n          </StatisticsChartWarningMessage>\n        ) : (\n          <StatisticsChartWrapperInternal\n            height={chartSizes.height}\n            width={chartSizes.width}\n          >\n            <ResponsiveContainer>\n              <BarChart\n                data={resultArray}\n                margin={{\n                  top: 10,\n                  right: 0,\n                  left: -32,\n                  bottom: 0,\n                }}\n                barGap={8}\n              >\n                <CartesianGrid\n                  vertical={false}\n                  stroke={theme.statistics.linesColor}\n                  strokeWidth={theme.statistics.linesWidth}\n                />\n                <XAxis\n                  dataKey=\"name\"\n                  axisLine={false}\n                  tickLine={false}\n                  tick={axisTextStyles}\n                />\n                <YAxis\n                  axisLine={false}\n                  tickLine={false}\n                  tick={axisTextStyles}\n                />\n                <Bar\n                  dataKey=\"day\"\n                  // dataKey={t('statisticsChart.day')}\n                  fill=\"#FFD2DD\"\n                  label={{\n                    ...barLabelStyles,\n                    position: 'top',\n                    formatter: value => `${value}%`,\n                  }}\n                  shape={<BarWithGradient radius={15} />}\n                  barSize={barWidth}\n                />\n                <Bar\n                  dataKey=\"month\"\n                  // dataKey={t('statisticsChart.month')}\n                  fill=\"#3E85F3\"\n                  label={{\n                    ...barLabelStyles,\n                    position: 'top',\n                    formatter: value => `${value}%`,\n                  }}\n                  shape={<BarWithGradient radius={15} />}\n                  barSize={barWidth}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </StatisticsChartWrapperInternal>\n        )}\n      </StatisticsChartWrapperExternal>\n    </StatisticsChartContainer>\n  );\n};\n\nexport default StatisticsChart;\n","export const tasksStatisticCalculator = data => {\n  //   const allTasks = todo + inprogress + done;\n  //   const todoPercent = (todo / allTasks) * 100;\n  //   const inprogressPercent = (inprogress / allTasks) * 100;\n  //   const donePercent = (done / allTasks) * 100;\n  //   if (type === 'todo') return todoPercent;\n  //   if (type === ' inprogress') return inprogressPercent;\n  //   if (type === 'donePercent') return donePercent;\n  const totalTasks = data.length;\n  console.log(totalTasks);\n  const statuses = {\n    'to-do': { name: 'To Do', day: 0, month: 0 },\n    'in-progress': { name: 'In Progress', day: 0, month: 0 },\n    done: { name: 'Done', day: 0, month: 0 },\n  };\n\n  data.forEach(task => {\n    const status = task.status;\n    if (statuses[status]) {\n      statuses[status].day += 1;\n      statuses[status].month += 1;\n    }\n  });\n\n  Object.values(statuses).forEach(status => {\n    status.day = (status.day / totalTasks) * 100;\n    status.month = (status.month / totalTasks) * 100;\n  });\n\n  const resultArray = Object.values(statuses);\n  return resultArray;\n};\n\n/**\"розрахунок данних для графіка:\n\nallTasksByDay=todoByDay+inprogressByDay+doneByDay\ntodoByDay%=todoByDay/allTasksByDay\ninprogressByDay%=inprogressByDay/allTasksByDay\ndoneByDay%=doneByDay/allTasksByDay\n\nвідповідний розрахунок виконується для колекції тасок за місяць\" */\n","import { CalendarToolbar } from 'components';\nimport {\n  StatisticsPageWrapper,\n  StatisticsPageContainer,\n  StatisticsPageHead,\n  StatisticsPageLegend,\n} from 'components/StatisticsPage/StatisticsPageStyled';\nimport StatisticsChart from 'components/StatisticsPage/StatisticsChart/StatisticsChart';\n\nconst StatisticsPage = () => {\n  return (\n    <StatisticsPageWrapper>\n      <StatisticsPageContainer>\n        <StatisticsPageHead>\n          <CalendarToolbar periodSelector={false} />\n          <StatisticsPageLegend>\n            <li>By Day</li>\n            <li>By Month</li>\n          </StatisticsPageLegend>\n        </StatisticsPageHead>\n        <StatisticsChart />\n      </StatisticsPageContainer>\n    </StatisticsPageWrapper>\n  );\n};\n\nexport default StatisticsPage;\n","export const getTasks = (state) => state.tasks.tasks;"],"names":["StatisticsPageWrapper","styled","div","_templateObject","_taggedTemplateLiteral","_ref","theme","breakpoints","laptop","StatisticsPageContainer","section","_templateObject2","_ref2","statistics","backgroundColor","_ref3","tablet","_ref4","StatisticsPageHead","_templateObject3","_ref5","_ref6","StatisticsPageLegend","ul","_templateObject4","_ref7","colors","highPriorityBack","_ref8","primary","getPath","x","y","width","height","radius","concat","props","fill","id","array","Uint32Array","window","crypto","getRandomValues","uniqueNumberGenerator","_jsxs","_Fragment","children","_jsx","x1","y1","x2","y2","offset","style","stopColor","stopOpacity","d","stroke","StatisticsChartContainer","linesWidth","linesColor","StatisticsChartWrapperExternal","StatisticsChartWrapperInternal","StatisticsChartWarningMessage","warningMessageColor","windowSize","useWindowSize","_useRect","useRect","_useRect2","_slicedToArray","chartSizes","chartWrapperRef","useContext","ThemeContext","resultArray","data","totalTasks","length","console","log","statuses","name","day","month","done","forEach","task","status","Object","values","tasksStatisticCalculator","useSelector","getTasks","axisTextStyles","chartTextColor","fontSize","fontWeight","barLabelStyles","barWidth","ref","ResponsiveContainer","BarChart","margin","top","right","left","bottom","barGap","CartesianGrid","vertical","strokeWidth","XAxis","dataKey","axisLine","tickLine","tick","YAxis","Bar","label","_objectSpread","position","formatter","value","shape","BarWithGradient","barSize","CalendarToolbar","periodSelector","StatisticsChart","state","tasks"],"sourceRoot":""}