{"version":3,"file":"static/js/154.e8442ffd.chunk.js","mappings":"2RASMA,EAAiBC,EAAAA,GAAW,CAChCC,KAAMD,EAAAA,KACHE,IAAI,GAAI,iCACRC,SAAS,YACZC,MAAOJ,EAAAA,KAAaI,MAAM,yBAAyBD,SAAS,YAC5DE,SAAUL,EAAAA,KACPM,IAAI,EAAG,gCACPJ,IAAI,GAAI,iCACRC,SAAS,cAGDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAM,IAAAf,EAAAG,EAAAC,EAAAY,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACF,OAArBpB,EAA0Be,EAA1Bf,KAAMG,EAAoBY,EAApBZ,MAAOC,EAAaW,EAAbX,SAAQc,EAAAE,KAAA,EACAb,GAASc,EAAAA,EAAAA,IAAS,CAAErB,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,KAAa,KAAD,EAApEY,EAAcE,EAAAI,KAGhBD,EAAAA,GAAAA,UAAAA,MAAyBL,KAC3BO,QAAQC,IAAI,2BACZjB,GAASkB,EAAAA,EAAAA,IAAM,CAAEtB,MAAAA,EAAOC,SAAAA,MACzB,wBAAAc,EAAAQ,OAAA,GAAAZ,EAAA,KACF,gBATiBa,GAAA,OAAAjB,EAAAkB,MAAA,KAAAC,UAAA,KAUlB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAa,CAAAC,SAAA,EACZF,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAAAD,SAAA,EACVE,EAAAA,EAAAA,KAACC,EAAAA,GAAU,CAAAH,SAAC,aAEZE,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CAAErC,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDkC,iBAAkBxC,EAClByC,SAAU,SAACxB,EAAMyB,GAAyB,IAArBC,EAAaD,EAAbC,cACnBC,YAAW,WACTjC,EAAaM,GACbQ,QAAQC,IAAI,kBACZiB,GAAc,EAChB,GAAG,IACL,EAAET,SAED,SAAAW,GAAA,IAAGC,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OAAM,OACjBf,EAAAA,EAAAA,MAACgB,EAAAA,GAAI,CAAAd,SAAA,EACHF,EAAAA,EAAAA,MAACiB,EAAAA,GAAU,CAAAf,SAAA,EACTE,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJhD,KAAK,OACLiD,MAAM,OACNC,KAAK,OACLC,YAAY,kBACZC,MAAOP,EAAO7C,KACd4C,QAASA,EAAQ5C,QAGnBkC,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJhD,KAAK,QACLiD,MAAM,gBACNC,KAAK,QACLC,YAAY,cACZC,MAAOP,EAAO1C,MACdyC,QAASA,EAAQzC,SAEnB+B,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJhD,KAAK,WACLiD,MAAM,WACNC,KAAK,WACLC,YAAY,iBACZC,MAAOP,EAAOzC,SACdwC,QAASA,EAAQxC,eAGrB8B,EAAAA,EAAAA,KAACmB,EAAAA,GAAU,CAACH,KAAK,SAASI,GAAG,OAAMtB,SAAC,cAG/B,QAIbE,EAAAA,EAAAA,KAACqB,EAAAA,GAAU,CAAAvB,SAAC,aAGlB,EC3EA,EAVqB,WACnB,OACEE,EAAAA,EAAAA,KAAA,WAASsB,MAAO,CAAEC,WAAY,WAAYzB,UACxCE,EAAAA,EAAAA,KAACwB,EAAAA,GAAS,CAACC,SAAO,EAACC,YAAU,EAAA5B,UAC3BE,EAAAA,EAAAA,KAAC5B,EAAY,OAIrB,C","sources":["components/Forms/RegisterForm/RegisterForm.js","pages/RegisterPage.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Input, AuthButton, LinkButton } from 'components';\nimport { FormFields, FormHeader, FormContainer } from 'UI/CommonStyles';\nimport { FormWrapper } from 'UI/CommonStyles/FormStyled';\nimport { useDispatch } from 'react-redux';\nimport { logIn, register } from 'redux/auth/operations';\n\nconst registerSchema = Yup.object({\n  name: Yup.string()\n    .max(15, 'Must be 15 characters or less')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Must be 8 characters or more')\n    .max(32, 'Must be 32 characters or less')\n    .required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async values => {\n    const { name, email, password } = values;\n    const registerResult = await dispatch(register({ name, email, password }));\n\n    // if registration is success, login\n    if (register.fulfilled.match(registerResult)) {\n      console.log('registration is success');\n      dispatch(logIn({ email, password }));\n    }\n  };\n  return (\n    <FormContainer>\n      <FormWrapper>\n        <FormHeader>Sign Up</FormHeader>\n\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={registerSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            setTimeout(() => {\n              handleSubmit(values);\n              console.log('after dispatch');\n              setSubmitting(false);\n            }, 400);\n          }}\n        >\n          {({ touched, errors }) => (\n            <Form>\n              <FormFields>\n                <Input\n                  name=\"name\"\n                  label=\"Name\"\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  error={errors.name}\n                  touched={touched.name}\n                />\n\n                <Input\n                  name=\"email\"\n                  label=\"Email Address\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  error={errors.email}\n                  touched={touched.email}\n                />\n                <Input\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  error={errors.password}\n                  touched={touched.password}\n                />\n              </FormFields>\n              <AuthButton type=\"submit\" mt=\"32px\">\n                Sign Up\n              </AuthButton>\n            </Form>\n          )}\n        </Formik>\n      </FormWrapper>\n      <LinkButton>Log In</LinkButton>\n    </FormContainer>\n  );\n};\n","import { Container } from 'components';\nimport { RegisterForm } from 'components/Forms/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <section style={{ background: '#dcebf7' }}>\n      <Container outline fullscreen>\n        <RegisterForm />\n      </Container>\n    </section>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["registerSchema","Yup","name","max","required","email","password","min","RegisterForm","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","registerResult","wrap","_context","prev","next","register","sent","console","log","logIn","stop","_x","apply","arguments","_jsxs","FormContainer","children","FormWrapper","_jsx","FormHeader","Formik","initialValues","validationSchema","onSubmit","_ref2","setSubmitting","setTimeout","_ref3","touched","errors","Form","FormFields","Input","label","type","placeholder","error","AuthButton","mt","LinkButton","style","background","Container","outline","fullscreen"],"sourceRoot":""}