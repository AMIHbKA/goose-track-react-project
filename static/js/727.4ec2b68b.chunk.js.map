{"version":3,"file":"static/js/727.4ec2b68b.chunk.js","mappings":"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","sources":["components/Forms/RegisterForm/RegisterForm.jsx","pages/RegisterPage.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport * as Yup from 'yup';\nimport { Input, AuthButton, LinkButton } from 'components';\nimport { FormFields, FormHeader, FormContainer } from 'UI/CommonStyles';\nimport { FormWrapper } from 'UI/CommonStyles/FormStyled';\nimport { useDispatch } from 'react-redux';\nimport { logIn, register } from 'redux/auth/operations';\nimport { useNavigate } from 'react-router';\nimport { useTranslation } from 'react-i18next';\n\nconst registerSchema = Yup.object({\n  name: Yup.string()\n    .max(15, 'Must be 15 characters or less')\n    .required('Required'),\n  email: Yup.string().email('Invalid email address').required('Required'),\n  password: Yup.string()\n    .min(8, 'Must be 8 characters or more')\n    .max(32, 'Must be 32 characters or less')\n    .required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const { t } = useTranslation();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = async values => {\n    const { name, email, password } = values;\n    const registerResult = await dispatch(register({ name, email, password }));\n\n    // if registration is success, login\n    if (register.fulfilled.match(registerResult)) {\n\n      dispatch(logIn({ email, password }));\n    }\n  };\n\n  const handleLogInClick = () => {\n    navigate('/login');\n  };\n\n  return (\n    <FormContainer>\n      <FormWrapper>\n        <FormHeader>{t('registerForm.formHeader')}</FormHeader>\n\n        <Formik\n          initialValues={{ name: '', email: '', password: '' }}\n          validationSchema={registerSchema}\n          onSubmit={async values => {\n            await handleSubmit(values);\n          }}\n        >\n          {({ touched, errors }) => (\n            <Form>\n              <FormFields>\n                <Input\n                  name=\"name\"\n                  label={t('registerForm.name')}\n                  type=\"text\"\n                  placeholder={t('registerForm.placeholderName')}\n                  error={errors.name}\n                  touched={touched.name}\n                />\n                <Input\n                  name=\"email\"\n                  label={t('registerForm.emailAddress')}\n                  type=\"email\"\n                  placeholder={t('registerForm.placeholderEmail')}\n                  error={errors.email}\n                  touched={touched.email}\n                />\n                <Input\n                  name=\"password\"\n                  label={t('registerForm.password')}\n                  type=\"password\"\n                  placeholder={t('registerForm.placeholderPassword')}\n                  error={errors.password}\n                  touched={touched.password}\n                />\n              </FormFields>\n              <AuthButton type=\"submit\" mt=\"32px\">\n                {t('registerForm.buttonSignUp')}\n              </AuthButton>\n            </Form>\n          )}\n        </Formik>\n      </FormWrapper>\n      <LinkButton onClick={handleLogInClick}>\n        {t('registerForm.linkLogIn')}\n      </LinkButton>\n    </FormContainer>\n  );\n};\n","import { Container } from 'components';\nimport { RegisterForm } from 'components/Forms/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nconst RegisterPage = () => {\n  return (\n    <section style={{ background: '#dcebf7', height: '100vh' }}>\n      <Container full_center signin>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <RegisterForm />\n      </Container>\n    </section>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["registerSchema","Yup","name","max","required","email","password","min","RegisterForm","t","useTranslation","dispatch","useDispatch","navigate","useNavigate","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","registerResult","wrap","_context","prev","next","register","sent","fulfilled","match","logIn","stop","_x","apply","arguments","_jsxs","FormContainer","children","FormWrapper","_jsx","FormHeader","Formik","initialValues","validationSchema","onSubmit","_ref2","_callee2","_context2","_x2","_ref3","touched","errors","Form","FormFields","Input","label","type","placeholder","error","AuthButton","mt","LinkButton","onClick","style","background","height","Container","full_center","signin","Helmet"],"sourceRoot":""}