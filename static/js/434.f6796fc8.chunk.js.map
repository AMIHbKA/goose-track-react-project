{"version":3,"file":"static/js/434.f6796fc8.chunk.js","mappings":"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","sources":["components/Calendar/CalendarHead/CalendarHeadStyled.jsx","components/Calendar/CalendarHead/DayCell/DayCellStyled.jsx","components/Calendar/CalendarHead/DayName/DayName.jsx","components/Calendar/CalendarHead/DayCell/DayCell.jsx","components/Calendar/CalendarHead/CalendarHead.jsx","components/Calendar/ChoosedDay/AddTaskBtn/AddTaskBtn.jsx","components/Calendar/ChoosedDay/ColumnHeadBar/ColumnHeadBarStyled.jsx","components/Calendar/ChoosedDay/ColumnHeadBar/ColumnHeadBar.jsx","components/Calendar/ChoosedDay/ColumnsTasksList/ColumnsTasksList.jsx","components/Calendar/ChoosedDay/TasksColumn/TasksColumnStyled.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskColumnCardStyled.jsx","components/Calendar/ChoosedDay/TaskColumnCard/TaskColumnCard.jsx","components/Calendar/ChoosedDay/TasksColumn/TasksColumn.jsx","components/Calendar/ChoosedDay/TasksColumnList/TasksColumnListStyled.jsx","components/Calendar/ChoosedDay/TasksColumnList/TasksColumnList.jsx","components/Calendar/ChoosedDay/ChoosedDayContainer.jsx","components/Calendar/ChoosedDay/ChoosedDay.jsx","components/Calendar/DateBadge/DateBadge.jsx","utilities/dateHelpers.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst CalendarHeadStyled = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n\n  width: 100%;\n\n  margin-top: 24px;\n  margin-bottom: 14px;\n\n  ${({ condensed }) =>\n    condensed ? `padding: 15px 0 14px;` : `padding: 17px 0 16px;`};\n\n  background-color: ${({ theme }) => theme.choosedMonth.dateBackground};\n\n  border: 1px solid ${({ theme }) => theme.choosedMonth.borderColor};\n  border-radius: 8px;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    margin-top: 32px;\n\n    ${({ condensed }) =>\n      condensed ? `padding: 11px 0 10px;` : `padding: 15px 0 14px;`};\n  }\n`;\n\nexport default CalendarHeadStyled;\n","import styled from 'styled-components';\n\nconst DayCellStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .date-badge-wrapper {\n    margin-top: 6px;\n  }\n\n  .date-wrapper {\n    text-align: center;\n\n    ${({ pointer }) =>\n      pointer &&\n      `\n    cursor: pointer;\n  `}\n  }\n`;\n\nexport default DayCellStyled;\n","import styled from 'styled-components';\n\nconst DayName = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 18px;\n\n  text-align: center;\n\n  ${({ theme, isWeekend }) =>\n    isWeekend &&\n    `\n        color: ${theme.colors.primary};\n    `};\n`;\n\nexport default DayName;\n","import { useContext, useCallback } from 'react';\nimport { useWindowWidth } from 'hooks/useWindowWidth';\nimport { ThemeContext } from 'styled-components';\nimport DateBadge from 'components/Calendar/DateBadge/DateBadge';\nimport DayCellStyled from './DayCellStyled';\nimport DayName from '../DayName/DayName';\n\nconst DayCell = ({ day, date, activeDate, onDateClick }) => {\n  const windowWidth = useWindowWidth();\n\n  const theme = useContext(ThemeContext);\n\n  const dayName = useCallback(\n    () =>\n      windowWidth < Number.parseInt(theme.breakpoints.tablet)\n        ? day.slice(0, 1)\n        : day,\n    [day, windowWidth, theme]\n  );\n\n  const isWeekend = !date && (day === 'SAT' || day === 'SUN');\n\n  const isActive =\n    date && activeDate && date.dateObject.getDate() === activeDate.getDate();\n\n  if (date) {\n    return (\n      <DayCellStyled pointer={onDateClick && true}>\n        <div className=\"date-wrapper\" onClick={onDateClick}>\n          <DayName isWeekend={isWeekend}>{dayName()}</DayName>\n          <div className=\"date-badge-wrapper\">\n            <DateBadge isActive={isActive}>{date.day}</DateBadge>\n          </div>\n        </div>\n      </DayCellStyled>\n    );\n  }\n\n  return <DayName isWeekend={isWeekend}>{dayName()}</DayName>;\n};\n\nexport default DayCell;\n","import React from 'react';\nimport CalendarHeadStyled from './CalendarHeadStyled';\nimport DayCell from './DayCell/DayCell';\n\nconst CalendarHead = ({ weekDates, activeDate, onDateClick }) => {\n  const days = ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'];\n\n  return (\n    <CalendarHeadStyled condensed={weekDates}>\n      {days.map((day, index) => (\n        <DayCell\n          key={day}\n          day={day}\n          date={weekDates ? weekDates[index] : null}\n          activeDate={activeDate}\n          onDateClick={onDateClick && onDateClick}\n        />\n      ))}\n    </CalendarHeadStyled>\n  );\n};\n\nexport default CalendarHead;\n","import styled from 'styled-components';\n\nconst AddTaskBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n\n  padding: 12px;\n\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 18px;\n\n  color: ${({ theme }) => theme.colors.mainText};\n\n  background-color: ${({ theme }) => theme.choosedDay.addBtnBackground};\n\n  border-radius: 8px;\n\n  ${({ theme }) =>\n    theme.choosedDay.addBtnBorder\n      ? `border: ${theme.choosedDay.addBtnBorder};`\n      : 'border: none;'}\n\n  div {\n    margin-left: 8px;\n    padding-top: 2px;\n  }\n\n  @media (max-width: ${props => props.theme.breakpoints.preTablet}) {\n    position: sticky;\n    bottom: 0;\n\n    width: calc(100vw - 40px - 18px - 19px);\n\n    ${({ noTasks }) =>\n      noTasks &&\n      `\n      margin-top: 35px;\n      `}\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    ${({ tasks }) =>\n      tasks ||\n      `\n      margin-top: 28px;\n      `}\n  }\n`;\n\nexport default AddTaskBtn;\n","import styled from 'styled-components';\n\nexport const ColumnHeadBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 7px 0;\n\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 20px;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    font-size: 20px;\n    line-height: 24px;\n  }\n`;\n\nexport const ColumnHeadBarButtons = styled.div`\n  cursor: pointer;\n`;\n","import { PlusCircleIcon } from 'UI';\nimport {\n  ColumnHeadBarContainer,\n  ColumnHeadBarButtons,\n} from './ColumnHeadBarStyled';\nimport { useTheme } from 'styled-components';\nimport { useMobile } from 'hooks';\n\nconst ColumnHeadBar = ({ stage }) => {\n  const {\n    colors: { mainText },\n  } = useTheme();\n\n  const isMobile = useMobile();\n\n  return (\n    <ColumnHeadBarContainer>\n      {stage}\n      <ColumnHeadBarButtons>\n        <PlusCircleIcon size={isMobile ? 22 : 24} stroke={mainText} />\n      </ColumnHeadBarButtons>\n    </ColumnHeadBarContainer>\n  );\n};\n\nexport default ColumnHeadBar;\n","import styled from 'styled-components';\n\nconst ColumnsTasksList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n\n  max-height: ${props => props.maxHeight - 159 + 47}px;\n\n  overflow-y: auto;\n\n  outline: 1px solid red;\n\n  ${({ noTasks }) =>\n    noTasks ||\n    `\n    margin-top: 24px;\n    `}\n`;\n\nexport default ColumnsTasksList;\n","import styled from 'styled-components';\n\nconst TasksColumnStyled = styled.div`\n  position: relative;\n\n  width: calc(100vw - 40px);\n\n  ${({ maxHeight }) => maxHeight && `max-height: ${maxHeight}px;`}\n\n  padding: 18px 18px 20px;\n\n  background-color: ${({ theme }) => theme.choosedMonth.dateBackground};\n\n  border: 1px solid ${({ theme }) => theme.choosedMonth.borderColor};\n  border-radius: 8px;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    width: calc((100vw - 64px - 16px) / 2);\n\n    padding: 20px;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.laptop}) {\n    width: calc((100vw - 64px - 289px - (27px * 2)) / 3);\n  }\n`;\n\nexport default TasksColumnStyled;\n","import styled from 'styled-components';\n\nexport const TasksColumnCardContainer = styled.div`\n  padding: 14px 12px 18px 15px;\n\n  border-radius: 8px;\n\n  border: 1px solid ${({ theme }) => theme.choosedDay.taskCardBorderColor};\n  background-color: ${({ theme }) => theme.choosedDay.taskCardBackground};\n`;\n\nexport const TaskColumnCardDescription = styled.div`\n  overflow: hidden;\n\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 18px;\n\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const TaskColumnCardBottom = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n\n  margin-top: 28px;\n`;\n\nexport const TaskColumnCardBottomLeft = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n\n  gap: 8px;\n`;\n\nexport const TaskColumnCardBottomRight = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const TaskColumnCardBottomAvatar = styled.div`\n  width: 32px;\n  height: 32px;\n\n  border-radius: 50%;\n  border: 1.8px solid ${({ theme }) => theme.colors.primary};\n`;\n\nexport const TaskColumnCardPriorityChips = styled.div`\n  padding: 4px 12px;\n\n  text-transform: capitalize;\n\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 12px;\n\n  border-radius: 4px;\n\n  color: ${({ theme }) => theme.colors.mainBack};\n\n  background-color: ${({ theme, priority }) =>\n    priority === 'high'\n      ? theme.colors.highPriority\n      : priority === 'medium'\n      ? theme.colors.mediumPrioroty\n      : theme.colors.lowPriority};\n`;\n\nexport const TaskColumnCardButton = styled.div`\n  cursor: pointer;\n`;\n","import { useTheme } from 'styled-components';\nimport { useMobile } from 'hooks';\nimport {\n  TasksColumnCardContainer,\n  TaskColumnCardDescription,\n  TaskColumnCardBottom,\n  TaskColumnCardBottomLeft,\n  TaskColumnCardBottomRight,\n  TaskColumnCardBottomAvatar,\n  TaskColumnCardPriorityChips,\n  TaskColumnCardButton,\n} from './TaskColumnCardStyled';\n\nimport { ArrowCircleBrokenRightIcon, PencilIcon, TrashIcon } from 'UI/index';\n\nconst TaskColumnCard = ({ task }) => {\n  const theme = useTheme();\n\n  const isMobile = useMobile();\n\n  const iconSize = isMobile ? 14 : 16;\n\n  return (\n    <TasksColumnCardContainer>\n      <TaskColumnCardDescription>{task.title}</TaskColumnCardDescription>\n      <TaskColumnCardBottom>\n        <TaskColumnCardBottomLeft>\n          <TaskColumnCardBottomAvatar />\n          <TaskColumnCardPriorityChips priority={task.priority}>\n            {task.priority}\n          </TaskColumnCardPriorityChips>\n        </TaskColumnCardBottomLeft>\n        <TaskColumnCardBottomRight>\n          <TaskColumnCardButton>\n            <ArrowCircleBrokenRightIcon\n              size={iconSize}\n              stroke={theme.choosedDay.taskIconColor}\n            />\n          </TaskColumnCardButton>\n          <TaskColumnCardButton>\n            <PencilIcon\n              size={iconSize}\n              stroke={theme.choosedDay.taskIconColor}\n            />\n          </TaskColumnCardButton>\n          <TaskColumnCardButton>\n            <TrashIcon\n              size={iconSize}\n              stroke={theme.choosedDay.taskIconColor}\n            />\n          </TaskColumnCardButton>\n        </TaskColumnCardBottomRight>\n      </TaskColumnCardBottom>\n    </TasksColumnCardContainer>\n  );\n};\n\nexport default TaskColumnCard;\n","import { useTheme } from 'styled-components';\nimport { PlusIcon } from 'UI';\nimport AddTaskBtn from '../AddTaskBtn/AddTaskBtn';\nimport ColumnHeadBar from '../ColumnHeadBar/ColumnHeadBar';\nimport ColumnsTasksList from '../ColumnsTasksList/ColumnsTasksList';\nimport TasksColumnStyled from './TasksColumnStyled';\nimport TaskColumnCard from '../TaskColumnCard/TaskColumnCard';\nimport { useMobile } from 'hooks';\n\nconst TasksColumn = ({ stage, tasks, maxHeight }) => {\n  const {\n    colors: { mainText },\n  } = useTheme();\n\n  tasks.splice(9, 50);\n\n  const isMobile = useMobile();\n\n  const noTasks = !tasks || !tasks.length;\n\n  return (\n    <TasksColumnStyled maxHeight={maxHeight}>\n      <ColumnHeadBar stage={stage} />\n      <ColumnsTasksList maxHeight={maxHeight} noTasks={noTasks}>\n        {tasks.map(task => (\n          <TaskColumnCard key={task._id} task={task} />\n        ))}\n        {isMobile && (\n          <AddTaskBtn noTasks={noTasks}>\n            <PlusIcon size={24} stroke={mainText} /> <div>AddTask</div>\n          </AddTaskBtn>\n        )}\n      </ColumnsTasksList>\n      {isMobile || (\n        <AddTaskBtn noTasks={noTasks}>\n          <PlusIcon size={24} stroke={mainText} /> <div>AddTask</div>\n        </AddTaskBtn>\n      )}\n    </TasksColumnStyled>\n  );\n};\n\nexport default TasksColumn;\n","import styled from 'styled-components';\n\nexport const TasksColumnListContainer = styled.div`\n  position: relative;\n\n  flex-grow: 1;\n\n  display: flex;\n\n  width: calc(100vw - 40px);\n\n  overflow-x: auto;\n  overflow-y: hidden;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    width: calc(100vw - 64px);\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.laptop}) {\n    width: calc(100vw - 64px - 289px);\n  }\n`;\n\nexport const TasksColumnListWrapper = styled.div`\n  position: absolute;\n\n  display: inline-flex;\n  align-items: flex-start;\n\n  gap: 16px;\n\n  max-height: ${props => props.maxHeight}px;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    justify-content: space-between;\n  }\n\n  @media (min-width: ${props => props.theme.breakpoints.laptop}) {\n    gap: 27px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useRect } from 'hooks';\nimport TasksColumn from '../TasksColumn/TasksColumn';\nimport {\n  TasksColumnListContainer,\n  TasksColumnListWrapper,\n} from './TasksColumnListStyled';\n\nconst stages = ['To do', 'In progress', 'Done'];\n\nconst getStageByStatus = status => {\n  switch (status) {\n    case 'to-do':\n      return 'To do';\n    case 'in-progress':\n      return 'In progress';\n    default:\n      return 'Done';\n  }\n};\n\nconst TasksColumnList = ({ tasks }) => {\n  const [tasksColumnListWrapperHeight, setTasksColumnListWrapperHeight] =\n    useState(null);\n\n  const [tasksColumnListContainerRect, tasksColumnListContainerRef] = useRect(\n    'resize',\n    100,\n    100\n  );\n\n  useEffect(() => {\n    if (!tasksColumnListContainerRect) {\n      return;\n    }\n\n    setTasksColumnListWrapperHeight(tasksColumnListContainerRect.height - 46);\n  }, [tasksColumnListContainerRect]);\n\n  const tasksByStatus = tasks.reduce(\n    (acc, task) => {\n      acc[getStageByStatus(task.status)].push(task);\n\n      return acc;\n    },\n    { 'To do': [], 'In progress': [], Done: [] }\n  );\n\n  return (\n    <TasksColumnListContainer\n      className=\"TasksColumnListContainer\"\n      ref={tasksColumnListContainerRef}\n    >\n      {tasksColumnListWrapperHeight && (\n        <TasksColumnListWrapper\n          maxHeight={tasksColumnListWrapperHeight}\n          className=\"TasksColumnListWrapper\"\n        >\n          {stages.map(stage => (\n            <TasksColumn\n              key={stage}\n              stage={stage}\n              tasks={tasksByStatus[stage]}\n              maxHeight={tasksColumnListWrapperHeight}\n              className=\"TasksColumn\"\n            />\n          ))}\n        </TasksColumnListWrapper>\n      )}\n    </TasksColumnListContainer>\n  );\n};\n\nexport default TasksColumnList;\n","import styled from 'styled-components';\n\nconst ChoosedDayContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n\n  height: 100%;\n`;\n\nexport default ChoosedDayContainer;\n","import { useEffect, useState } from 'react';\nimport { useAuth } from 'hooks';\nimport { getWeekDatesForDate } from 'utilities/dateHelpers';\nimport CalendarHead from '../CalendarHead/CalendarHead';\nimport TasksColumnList from './TasksColumnList/TasksColumnList';\nimport ChoosedDayContainer from './ChoosedDayContainer';\nimport { api } from 'utilities';\n\nconst ChoosedDay = () => {\n  const date = new Date('2023-09-01');\n  const weekDates = getWeekDatesForDate(date);\n\n  const [tasks, setTasks] = useState([]);\n\n  const { isLoggedIn } = useAuth();\n\n  if (tasks) {\n    console.log('tasks', tasks);\n  }\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      setTasks([]);\n\n      return;\n    }\n\n    const fetchTasks = async () => {\n      const response = await api.instance.get('/tasks', {\n        year: 2023,\n        month: 9,\n      });\n\n      setTasks(response.data.tasks);\n    };\n\n    fetchTasks();\n  }, [isLoggedIn]);\n\n  return (\n    <ChoosedDayContainer>\n      <CalendarHead\n        weekDates={weekDates}\n        activeDate={date}\n        onDateClick={() => {}}\n      />\n      <TasksColumnList tasks={tasks} />\n    </ChoosedDayContainer>\n  );\n};\n\nexport default ChoosedDay;\n","import styled from 'styled-components';\n\nconst DateBadge = styled.div`\n  padding: 4px 6px;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 14px;\n\n  ${({ isActive, theme }) =>\n    isActive &&\n    `\n    background-color: ${theme.colors.primary};\n    color: ${theme.choosedMonth.todayBadgeTextColor};\n    border-radius: 6px;\n  `}\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    padding: 4px 8px;\n\n    font-size: 16px;\n    line-height: 18px;\n\n    ${({ isActive }) =>\n      isActive &&\n      `\n    border-radius: 8px;\n  `}\n  }\n`;\n\nexport default DateBadge;\n","import { startOfWeek, endOfWeek, eachDayOfInterval, format } from 'date-fns';\n\nconst getDayOfWeek = isoDate => {\n  const date = new Date(isoDate);\n  return date.getDay();\n};\n\nexport const trimCalendarDates = calendarDates => {\n  let startIdx = 0;\n\n  for (let i = 0; i < calendarDates.length; i++) {\n    const obj = calendarDates[i];\n\n    if (obj.type === 'current') {\n      if (getDayOfWeek(obj.iso) === 1) {\n        startIdx = i;\n\n        break;\n      }\n\n      for (let j = i - 1; j >= 0; j--) {\n        if (\n          calendarDates[j].type === 'previous' &&\n          getDayOfWeek(calendarDates[j].iso) === 1\n        ) {\n          startIdx = j;\n\n          break;\n        }\n      }\n\n      break;\n    }\n  }\n\n  return calendarDates.slice(startIdx, startIdx + 35);\n};\n\nexport const getDateFromMonthString = monthString => {\n  const [monthStr, yearStr] = monthString.split(' ');\n\n  const monthNumber = new Date(Date.parse(`${monthStr} 1, 2023`)).getMonth();\n\n  const year = parseInt(yearStr);\n\n  const date = new Date(year, monthNumber);\n\n  return date;\n};\n\nexport const getWeekDatesForDate = date => {\n  const start = startOfWeek(date, { weekStartsOn: 1 });\n  const end = endOfWeek(date, { weekStartsOn: 1 });\n\n  return eachDayOfInterval({ start, end }).map(d => ({\n    date: format(d, 'yyyy-MM-dd'),\n    day: format(d, 'd'),\n    dateObject: d,\n  }));\n};\n"],"names":["styled","_templateObject","_taggedTemplateLiteral","_ref","condensed","_ref2","theme","choosedMonth","dateBackground","_ref3","borderColor","_ref4","breakpoints","tablet","_ref5","pointer","isWeekend","concat","colors","primary","day","date","activeDate","onDateClick","windowWidth","useWindowWidth","useContext","ThemeContext","dayName","useCallback","Number","parseInt","slice","isActive","dateObject","getDate","_jsx","DayCellStyled","children","_jsxs","className","onClick","DayName","DateBadge","weekDates","CalendarHeadStyled","map","index","DayCell","mainText","choosedDay","addBtnBackground","addBtnBorder","props","preTablet","noTasks","tasks","ColumnHeadBarContainer","ColumnHeadBarButtons","_templateObject2","stage","useTheme","isMobile","useMobile","PlusCircleIcon","size","stroke","maxHeight","laptop","TasksColumnCardContainer","taskCardBorderColor","taskCardBackground","TaskColumnCardDescription","TaskColumnCardBottom","_templateObject3","TaskColumnCardBottomLeft","_templateObject4","TaskColumnCardBottomRight","_templateObject5","TaskColumnCardBottomAvatar","_templateObject6","TaskColumnCardPriorityChips","_templateObject7","mainBack","priority","highPriority","mediumPrioroty","lowPriority","TaskColumnCardButton","_templateObject8","task","iconSize","title","ArrowCircleBrokenRightIcon","taskIconColor","PencilIcon","TrashIcon","splice","length","TasksColumnStyled","ColumnHeadBar","ColumnsTasksList","TaskColumnCard","_id","AddTaskBtn","PlusIcon","TasksColumnListContainer","TasksColumnListWrapper","stages","_useState","useState","_useState2","_slicedToArray","tasksColumnListWrapperHeight","setTasksColumnListWrapperHeight","_useRect","useRect","_useRect2","tasksColumnListContainerRect","tasksColumnListContainerRef","useEffect","height","tasksByStatus","reduce","acc","status","getStageByStatus","push","Done","ref","TasksColumn","Date","getWeekDatesForDate","setTasks","isLoggedIn","useAuth","console","log","fetchTasks","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","api","year","month","sent","data","stop","apply","arguments","ChoosedDayContainer","CalendarHead","TasksColumnList","todayBadgeTextColor","getDayOfWeek","isoDate","getDay","trimCalendarDates","calendarDates","startIdx","i","obj","type","iso","j","getDateFromMonthString","monthString","_monthString$split","split","_monthString$split2","monthStr","yearStr","monthNumber","parse","getMonth","start","startOfWeek","weekStartsOn","end","endOfWeek","eachDayOfInterval","d","format"],"sourceRoot":""}