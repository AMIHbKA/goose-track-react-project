{"version":3,"file":"static/js/998.bd584c75.chunk.js","mappings":"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","sources":["components/StatisticsPage/StatisticsPageStyled.jsx","components/StatisticsPage/StatisticsChart/BarWithGradient/BarWithGradient.jsx","utilities/uniqueNumberGenerator.js","components/StatisticsPage/StatisticsChart/StatisticsChartStyled.jsx","components/StatisticsPage/StatisticsChart/StatisticsChart.jsx","pages/StatisticsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StatisticsPageWrapper = styled.div`\n  height: 100%;\n\n  padding-bottom: 20px;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.laptop}) {\n    padding-bottom: 14px;\n  }\n`;\n\nexport const StatisticsPageContainer = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: stretch;\n\n  height: 100%;\n\n  padding: 28px 14px 14px;\n\n  margin-bottom: 20px;\n\n  border-radius: 16px;\n\n  background-color: ${({ theme }) => theme.statistics.backgroundColor};\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    padding: 132px 32px 32px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.laptop}) {\n    padding: 134px 113px 32px;\n  }\n`;\n\nexport const StatisticsPageHead = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  margin-bottom: 40px;\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    flex-direction: row;\n    justify-content: space-between;\n\n    padding: 0 32px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.laptop}) {\n    padding: 0 40px;\n  }\n`;\n\nexport const StatisticsPageLegend = styled.ul`\n  display: flex;\n\n  margin-top: 2px;\n\n  font-weight: 400;\n  line-height: 18px;\n\n  li {\n    display: flex;\n    align-items: center;\n\n    ::before {\n      content: '';\n\n      display: inline-block;\n\n      width: 8px;\n      height: 8px;\n\n      margin-right: 8px;\n\n      border-radius: 50%;\n\n      background-color: ${({ theme }) => theme.colors.highPriorityBack};\n    }\n\n    :nth-child(2) {\n      margin-left: 14px;\n\n      ::before {\n        background-color: ${({ theme }) => theme.colors.primary};\n      }\n    }\n  }\n`;\n","import uniqueNumberGenerator from '../../../../utilities/uniqueNumberGenerator';\n\nconst getPath = (x, y, width, height, radius) => {\n  return `M ${x},${y} \n           L ${x},${y + height - radius}\n           C ${x} ${y + height} ${x} ${y + height} ${x + radius} ${y + height}\n           L ${x + width - radius}, ${y + height}\n           C ${x + width} ${y + height} ${x + width} ${y + height} ${\n    x + width\n  } ${y + height - radius}\n           L ${x + width},${y} \n           Z`;\n};\n\nconst BarWithGradient = props => {\n  const { fill, x, y, width, height, radius } = props;\n\n  const id = uniqueNumberGenerator();\n\n  return (\n    <>\n      <defs>\n        <linearGradient id={id} x1=\"0%\" y1=\"100%\" x2=\"0%\" y2=\"0%\">\n          <stop offset=\"0%\" style={{ stopColor: fill, stopOpacity: 1 }} />\n          <stop offset=\"100%\" style={{ stopColor: fill, stopOpacity: 0 }} />\n        </linearGradient>\n      </defs>\n      <path\n        d={getPath(x, y, width, height, radius)}\n        stroke=\"none\"\n        fill={`url(#${id})`}\n      />\n    </>\n  );\n};\n\nexport default BarWithGradient;\n","export default function uniqueNumberGenerator() {\n  const array = new Uint32Array(1);\n\n  window.crypto.getRandomValues(array);\n\n  return array[0];\n}\n","import styled from 'styled-components';\n\nexport const StatisticsChartContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  flex-grow: 1;\n\n  max-height: 413px;\n\n  padding: 40px 14px;\n\n  border-width: ${({ theme }) => theme.statistics.linesWidth};\n  border-color: ${({ theme }) => theme.statistics.linesColor};\n  border-style: solid;\n  border-radius: 20px;\n\n  h2 {\n    font-weight: 600;\n    font-size: 14px;\n    line-height: 21px;\n\n    margin-bottom: 20px;\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    max-height: 424px;\n\n    padding: 32px;\n\n    h2 {\n      margin-bottom: 24px;\n    }\n  }\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.laptop}) {\n    max-height: 440px;\n\n    padding: 40px;\n  }\n`;\n\nexport const StatisticsChartWrapperExternal = styled.div`\n  position: relative;\n\n  flex-grow: 1;\n`;\n\nexport const StatisticsChartWrapperInternal = styled.div`\n  position: absolute;\n\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n`;\n\nexport const StatisticsChartWarningMessage = styled.div`\n  width: 100%;\n  height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: 700;\n  font-size: 12px;\n\n  color: ${({ theme }) => theme.statistics.warningMessageColor};\n\n  @media (min-width: ${({ theme }) => theme.breakpoints.tablet}) {\n    font-size: 18px;\n  }\n`;\n","import { useContext } from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n} from 'recharts';\nimport { ThemeContext } from 'styled-components';\nimport { useWindowSize, useRect } from 'hooks';\nimport BarWithGradient from './BarWithGradient/BarWithGradient';\nimport {\n  StatisticsChartContainer,\n  StatisticsChartWarningMessage,\n  StatisticsChartWrapperExternal,\n  StatisticsChartWrapperInternal,\n} from './StatisticsChartStyled';\n\nconst data = [\n  {\n    name: 'To Do',\n    day: 30,\n    month: 35,\n  },\n  {\n    name: 'In Progress',\n    day: 20,\n    month: 30,\n  },\n  {\n    name: 'Done',\n    day: 45,\n    month: 40,\n  },\n];\n\nconst StatisticsChart = () => {\n  const windowSize = useWindowSize();\n\n  const [chartSizes, chartWrapperRef] = useRect('resize', 300, 1000);\n\n  const theme = useContext(ThemeContext);\n\n  const axisTextStyles = {\n    fill: theme.statistics.chartTextColor,\n    fontSize: '14',\n    fontWeight: '400',\n  };\n\n  const barLabelStyles = {\n    fill: theme.statistics.chartTextColor,\n    fontSize: windowSize.width < 768 ? 12 : 16,\n    fontWeight: '500',\n  };\n\n  const barWidth = windowSize.width < 768 ? 22 : 27;\n\n  return (\n    <StatisticsChartContainer>\n      <h2>Tasks</h2>\n      <StatisticsChartWrapperExternal ref={chartWrapperRef}>\n        {chartSizes.height < 100 ? (\n          <StatisticsChartWarningMessage>\n            {chartSizes.height > 21 &&\n              `Insufficient window height for chart display`}\n          </StatisticsChartWarningMessage>\n        ) : (\n          <StatisticsChartWrapperInternal\n            height={chartSizes.height}\n            width={chartSizes.width}\n          >\n            <ResponsiveContainer>\n              <BarChart\n                data={data}\n                margin={{\n                  top: 10,\n                  right: 0,\n                  left: -32,\n                  bottom: 0,\n                }}\n                barGap={8}\n              >\n                <CartesianGrid\n                  vertical={false}\n                  stroke={theme.statistics.linesColor}\n                  strokeWidth={theme.statistics.linesWidth}\n                />\n                <XAxis\n                  dataKey=\"name\"\n                  axisLine={false}\n                  tickLine={false}\n                  tick={axisTextStyles}\n                />\n                <YAxis\n                  axisLine={false}\n                  tickLine={false}\n                  tick={axisTextStyles}\n                />\n                <Bar\n                  dataKey=\"day\"\n                  fill=\"#FFD2DD\"\n                  label={{\n                    ...barLabelStyles,\n                    position: 'top',\n                    formatter: value => `${value}%`,\n                  }}\n                  shape={<BarWithGradient radius={15} />}\n                  barSize={barWidth}\n                />\n                <Bar\n                  dataKey=\"month\"\n                  fill=\"#3E85F3\"\n                  label={{\n                    ...barLabelStyles,\n                    position: 'top',\n                    formatter: value => `${value}%`,\n                  }}\n                  shape={<BarWithGradient radius={15} />}\n                  barSize={barWidth}\n                />\n              </BarChart>\n            </ResponsiveContainer>\n          </StatisticsChartWrapperInternal>\n        )}\n      </StatisticsChartWrapperExternal>\n    </StatisticsChartContainer>\n  );\n};\n\nexport default StatisticsChart;\n","import { CalendarToolbar } from 'components';\nimport {\n  StatisticsPageWrapper,\n  StatisticsPageContainer,\n  StatisticsPageHead,\n  StatisticsPageLegend,\n} from 'components/StatisticsPage/StatisticsPageStyled';\nimport StatisticsChart from 'components/StatisticsPage/StatisticsChart/StatisticsChart';\n\nconst StatisticsPage = () => {\n  return (\n    <StatisticsPageWrapper>\n      <StatisticsPageContainer>\n        <StatisticsPageHead>\n          <CalendarToolbar periodSelector={false} />\n          <StatisticsPageLegend>\n            <li>By Day</li>\n            <li>By Month</li>\n          </StatisticsPageLegend>\n        </StatisticsPageHead>\n        <StatisticsChart />\n      </StatisticsPageContainer>\n    </StatisticsPageWrapper>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["StatisticsPageWrapper","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","breakpoints","laptop","StatisticsPageContainer","_templateObject2","_ref2","statistics","backgroundColor","_ref3","tablet","_ref4","StatisticsPageHead","_templateObject3","_ref5","_ref6","StatisticsPageLegend","_templateObject4","_ref7","colors","highPriorityBack","_ref8","primary","getPath","x","y","width","height","radius","concat","props","fill","id","array","Uint32Array","window","crypto","getRandomValues","uniqueNumberGenerator","_jsxs","_Fragment","children","_jsx","x1","y1","x2","y2","offset","style","stopColor","stopOpacity","d","stroke","StatisticsChartContainer","linesWidth","linesColor","StatisticsChartWrapperExternal","StatisticsChartWrapperInternal","StatisticsChartWarningMessage","warningMessageColor","data","name","day","month","windowSize","useWindowSize","_useRect","useRect","_useRect2","_slicedToArray","chartSizes","chartWrapperRef","useContext","ThemeContext","axisTextStyles","chartTextColor","fontSize","fontWeight","barLabelStyles","barWidth","ref","ResponsiveContainer","BarChart","margin","top","right","left","bottom","barGap","CartesianGrid","vertical","strokeWidth","XAxis","dataKey","axisLine","tickLine","tick","YAxis","Bar","label","_objectSpread","position","formatter","value","shape","BarWithGradient","barSize","CalendarToolbar","periodSelector","StatisticsChart"],"sourceRoot":""}